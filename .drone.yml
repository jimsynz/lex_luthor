kind: pipeline
type: docker
name: build

environment:
  ASDF_DATA_DIR: /drone/src/.asdf
  ASDF_DIR: /root/.asdf
  HEX_HOME: /drone/src/.hex
  MIX_ARCHIVES: /drone/src/.mix
  MIX_ENV: test
  MIX_HOME: /drone/src/.mix
  REBAR_BASE_DIR: /drone/src/.rebar3

steps:
- name: restore ASDF cache
  image: meltwater/drone-cache
  pull: always
  settings:
    restore: true
    backend: filesystem
    cache_key: '{{ checksum ".tool-versions" }}'
    remote_root: asdf
    mount:
      - .asdf
  volumes:
    - name: cache
      path: /tmp/cache

- name: install ASDF
  image: harton.dev/james/asdf_container:latest
  depends_on:
  - restore ASDF cache
  commands:
  - asdf_install

- name: store ASDF cache
  depends_on:
  - install ASDF
  image: meltwater/drone-cache
  pull: always
  settings:
    rebuild: true
    backend: filesystem
    cache_key: '{{ checksum ".tool-versions" }}'
    remote_root: asdf
    mount:
      - .asdf
  volumes:
    - name: cache
      path: /tmp/cache

- name: restore build cache
  image: meltwater/drone-cache
  pull: always
  settings:
    restore: true
    backend: filesystem
    cache_key: '{{ checksum ".tool-versions" }}/{{ checksum "mix.lock" }}'
    remote_root: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}/build
    mount:
      - deps
      - _build/test
      - .hex
      - .mix
      - .rebar3
  volumes:
    - name: cache
      path: /tmp/cache

- name: build
  image: harton.dev/james/asdf_container:latest
  pull: "always"
  depends_on:
  - restore build cache
  - install ASDF
  commands:
  - asdf mix local.hex --if-missing --force
  - asdf mix local.rebar --if-missing --force
  - asdf mix deps.get
  - asdf mix deps.compile

- name: store build cache
  depends_on:
  - build
  image: meltwater/drone-cache
  pull: always
  settings:
    rebuild: true
    backend: filesystem
    cache_key: '{{ checksum ".tool-versions" }}/{{ checksum "mix.lock" }}'
    remote_root: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}/build
    mount:
      - deps
      - _build/test
      - .hex
      - .mix
      - .rebar3
  volumes:
    - name: cache
      path: /tmp/cache

- name: mix check
  image: harton.dev/james/asdf_container:latest
  depends_on:
  - store build cache
  commands:
  - asdf mix check

- name: mix git_ops.release
  image: harton.dev/james/asdf_container:latest
  when:
    branch:
    - main
    event:
      exclude:
      - pull_request
  depends_on:
  - mix check
  environment:
    DRONE_TOKEN:
      from_secret: DRONE_TOKEN
  commands:
    - git fetch --tags
    - . $ASDF_DIR/asdf.sh
    - mix git_ops.project_info --format=shell > before.env
    - mix git_ops.release --yes --no-major || true
    - mix git_ops.project_info --format=shell > after.env
    - . ./before.env
    - export OLD_APP_VERSION=$${APP_VERSION}
    - . ./after.env
    - export NEW_APP_VERSION=$${APP_VERSION}
    - if [ "v$${OLD_APP_VERSION}" != "v$${NEW_APP_VERSION}" ]; then
    -   export GIT_URL=$(echo $DRONE_GIT_HTTP_URL | sed -e "s/:\\/\\//:\\/\\/$DRONE_REPO_OWNER:$DRONE_TOKEN@/")
    -   git push $${GIT_URL} "HEAD:${DRONE_COMMIT_REF}" "refs/tags/v$${NEW_APP_VERSION}"
    - fi

- name: build artifacts
  image: harton.dev/james/asdf_container:latest
  when:
    event:
    - tag
    refs:
      include:
      - refs/tags/v*
  depends_on:
  - mix check
  commands:
    - . $ASDF_DIR/asdf.sh
    - mix git_ops.project_info --format=shell > app.env
    - . ./app.env
    - mkdir artifacts
    - mix hex.build -o "artifacts/$${APP_NAME}-$${APP_VERSION}-pkg.tar"
    - gzip "artifacts/$${APP_NAME}-$${APP_VERSION}-pkg.tar"
    - mix docs
    - tar zcvf "artifacts/$${APP_NAME}-$${APP_VERSION}-docs.tar.gz" doc/
    - git tag -l --format='%(contents:subject)' v$${APP_VERSION} > tag_subject
    - git tag -l --format='%(contents:body)' v$${APP_VERSION} > tag_body

- name: gitea release
  image: plugins/gitea-release
  when:
    event:
    - tag
    refs:
      include:
      - refs/tags/v*
  depends_on:
  - build artifacts
  settings:
    api_key:
      from_secret: DRONE_TOKEN
    base_url: https://harton.dev
    files: artifacts/*.tar.gz
    checksum: sha256
    title: tag_subject
    note: tag_body

- name: docs release
  when:
    event:
    - tag
    refs:
      include:
      - refs/tags/v*
  image: minio/mc
  environment:
      S3_ENDPOINT:
        from_secret: S3_ENDPOINT
      ACCESS_KEY:
        from_secret: ACCESS_KEY_ID
      SECRET_KEY:
        from_secret: SECRET_ACCESS_KEY
  depends_on:
  - build artifacts
  commands:
  - mc alias set store $${S3_ENDPOINT} $${ACCESS_KEY} $${SECRET_KEY}
  - mc mb -p store/docs.harton.nz
  - mc mirror --overwrite doc/ store/docs.harton.nz/$${DRONE_REPO}/$${DRONE_TAG}
  - mc mirror --overwrite doc/ store/docs.harton.nz/$${DRONE_REPO}

- name: hex release
  image: harton.dev/james/asdf_container:latest
  when:
    event:
    - tag
    refs:
      include:
      - refs/tags/v*
  depends_on:
  - build artifacts
  environment:
    HEX_API_KEY:
      from_secret: HEX_API_KEY
  commands:
    - . $ASDF_DIR/asdf.sh
    - mix hex.publish --yes

volumes:
  - name: cache
    host:
      path: /tmp/drone-cache
